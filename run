#!/bin/bash

RAM=8G
SMP=8
FOLDER_AMT=0

SPICE_PORT_NET="port="
SPICE_PORT_UNX="unix,addr=/tmp/vm_spice.socket"
SPICE="-vga qxl -device virtio-serial-pci -spice "
SPICE_POST=",disable-ticketing -device virtserialport,"
SPICE_POST+="chardev=spicechannel0,name=com.redhat.spice.0 "
SPICE_POST+="-chardev spicevmc,id=spicechannel0,name=vdagent "

DRVCNT=0
PAUSE=0
FAKE=0
DAEMON=0
UEFI=0
JAIL=0
DSPLY=1

APP=qemu-system-x86_64
#APP=kvm

cmd="$APP -cpu host -enable-kvm -device intel-hda -device hda-duplex "
cmd+="-usb -device usb-tablet "

cmdline_pre="\"console=ttyS0 earlyprintk=serial "
cmdline_post=" rw nokaslr \" "
cmdline=""
kernel_cmd=""
net_cmd=""
port_cmd=""
ssh_cmd=""
tap_ctr=$((0))

E=$(printf '%02X' $tap_ctr)
IPADD=$(ip a show br0 | grep "inet " | awk '{ print $2; }' | sed 's/\/.*$//g' | sed "s/\.[^.]*$//")
IPADD=$(printf '%02X:' ${IPADD//./ })
#IPADD+=$E

make_tap() {
	TAPS=$(ip a | grep tap | awk '{ print $2; }' | sed 's/://g')
	for t in $TAPS; do
		tap="tap$tap_ctr"
		if [[ $tap == $t ]]; then
			tap_ctr=$((tap_ctr+1))
		else
			break
		fi
	done
	sudo ip tuntap add dev "tap$tap_ctr" mode tap
	sudo ip link set dev "tap$tap_ctr" up
	sudo ip link set "tap$tap_ctr" master br0
	E=$(printf '%02X' $tap_ctr)
	IPADD+=$E
}

while [ ! -z "$1" ]
do
	case "$1" in
		-a|--adddrv)
			cmd+="-drive file=$2,if=virtio "
			shift
			;;
		-cd|--cdrom)
			cmd+="-boot d -cdrom $2 "
			shift
			;;
		-kl|--kernel-locate)
			kernel_cmd+="-kernel $2 "
			shift
			;;
		-k|--kernel)
			kernel_cmd+="-kernel linux/arch/x86/boot/bzImage "
			;;
		-i|--init)
			cmd+="-initrd $2 "
			shift
			;;
		-c|--cmdline)
			cmdline+=$2
			shift
			;;
		-fs|--fedora-server)
			kernel_cmd+="-kernel fed_serv/vmlinuz "
			cmdline+="root=/dev/mapper/fedora_fedora-root ro rd.lvm.lv=fedora_fedora/root lsm=selinux,bpf "
			cmd+="-initrd fed_serv/initramfs.img "
			;;
		-fd|--fedora-desktop)
			cmdline+="root=/dev/mapper/fedora_localhost--live-root ro rd.lvm.lv=fedora_localhost-live/root "
			cmd+="-initrd fedora-desktop/initramfs.img "
			;;
		-p|--port)
			port_cmd+=",hostfwd=tcp::$2-:$3"
			shift
			shift
			;;
		-s|--ssh)
			ssh_cmd+=",hostfwd=tcp::$2-:22"
			shift
			;;
		-n|--nodisplay)
			cmd+="-display none "
			DSPLY=0
			;;
		-d|--debug)
			cmd+="-s "
			;;
		-b|--break)
			cmd+="-S "
			;;
		-r|--ram)
			RAM="$2"
			RAM+="G"
			shift
			;;
		-j|--threads)
			SMP="$2"
			shift
			;;
		-f|--folder)
			PAUSE=1
			FOLDER=`realpath $2`
			cmd+="-virtfs local,path=$FOLDER,mount_tag=host$FOLDER_AMT,security_model=passthrough,id=host$FOLDER_AMT "
			FOLDER_AMT=$(($FOLDER_AMT + 1))
			shift
			;;
		-v|--viewer)
			PAUSE=1
			SPICE+="$SPICE_PORT_UNX"
			SPICE+="$SPICE_POST"
			cmd+="$SPICE"
			cmd+="-display egl-headless,gl=on "
			SPICE_CMD="Connect to Viewer via Spice\nremote-viewer spice+unix:///tmp/vm_spice.socket"
			;;
		-vn|--net-viewer)
			SPICE+="$SPICE_PORT_NET"$2
			SPICE+="$SPICE_POST"
			cmd+="$SPICE"
			cmd+="-display egl-headless,gl=on "
			SPICE_CMD="Connect to Viewer via Spice\nremote-viewer spice+unix:///tmp/vm_spice.socket"
			shift
			;;
		-x|--daemon)
			DAEMON=1
			cmd+="-daemonize "
			;;
		-u|--uefi)
			UEFI=1
			cmd+="-drive file=uefi/OVMF_CODE.fd,if=pflash,format=raw,unit=0,readonly=on "
			cmd+="-drive file=uefi/OVMF_VARS.fd,if=pflash,format=raw,unit=1 "
			;;
		--bridge)
			make_tap
			# E=$(printf '%02X' $tap_ctr)
			# IPADD=$(ip a show br0 | grep "inet " | awk '{ print $2; }' | sed 's/\/.*$//g' | sed "s/\.[^.]*$//")
			# IPADD=$(printf '%02X:' ${IPADD//./ })
			# IPADD+=$E
			cmd+="-netdev type=tap,id=net$tap_ctr,ifname=tap$tap_ctr,script=no,downscript=no "
			cmd+="-device virtio-net-pci,netdev=net$tap_ctr,mac=AA:BB:$IPADD "
			;;
		--brip)
			make_tap
			E=$(printf '%02X' $2)
			IPADD=$(ip a show br0 | grep "inet " | awk '{ print $2; }' | sed 's/\/.*$//g' | sed "s/\.[^.]*$//")
			IPADD=$(printf '%02X:' ${IPADD//./ })
			IPADD+=$E
			cmd+="-netdev type=tap,id=net$tap_ctr,ifname=tap$tap_ctr,script=no,downscript=no "
			cmd+="-device virtio-net-pci,netdev=net$tap_ctr,mac=AA:BB:$IPADD "

			shift
			;;
		--jail)
			JAIL=1
			;;
		--syzrepro)
			cmd+="-no-reboot "
			cmdline+="oops=panic nmi_watchdog=panic panic_on_warn=1 panic=1 "
			cmdline+="ftrace_dump_on_oops=orig_cpu rodata=n vsyscall=native "
			cmdline+="net.ifnames=0 biosdevname=0 kvm-intel.nested=1 "
			cmdline+="kvm-intel.unrestricted_guest=1 kvm-intel.vmm_exclusive=1 "
			cmdline+="kvm-intel.fasteoi=1 kvm-intel.ept=1 kvm-intel.flexpriority=1 "
			cmdline+="kvm-intel.vpid=1 kvm-intel.emulate_invalid_guest_state=1 "
			cmdline+="kvm-intel.eptad=1 kvm-intel.enable_shadow_vmcs=1 kvm-intel.pml=1 kvm-intel.enable_apicv=1 "
			cmdline_post=" rw\" "
			;;
		--fake)
			FAKE=1
			;;
		*)
			cmd+="-drive file=$1,if=virtio "
			;;
	esac
	shift
done

if [[ $DSPLY -ne 0 && -z $SPICE_CMD ]]; then
	cmd+="-vga virtio -display gtk,grab-on-hover=on "
fi

if [ -z "$cmdline" ]
then
	cmdline="root=/dev/sda1 "
fi

if [ $DAEMON -eq 0 ]
then
	cmd+="-serial stdio "
fi	

fwd_cmd=$ssh_cmd
fwd_cmd+=$port_cmd

if [ ! -z "$fwd_cmd" ]
then
	net_cmd="-net user"
	net_cmd+=$fwd_cmd
	net_cmd+=" -net nic "
fi

cmdline_full=$cmdline_pre
cmdline_full+=$cmdline
cmdline_full+=$cmdline_post

cmd+=$net_cmd
cmd+="-m $RAM -smp $SMP "

if [ ! -z "$kernel_cmd" ]
then
	cmd+=$kernel_cmd
	cmd+="-append "
	cmd+=$cmdline_full
fi

if [ $JAIL -eq 1 ]
then
	cmd="sandbox -t qemu_t firejail "$cmd
fi

while [ "$FOLDER_AMT" -gt 0 ]
do
	FOLDER_AMT=$(($FOLDER_AMT - 1))
	echo
	echo "==========================================================================="
	echo "to mount your folder in the guest run the following command"
	echo "mount -t 9p -o trans=virtio,version=9p2000.L host$FOLDER_AMT <desired path>"
	echo "==========================================================================="
done

if [ "$SPICE_CMD" != "" ]
then
	echo "==========================================================================="
	echo -e $SPICE_CMD
	echo "==========================================================================="
fi

# if [ $PAUSE -eq 1 ]
# then
# 	sleep 3
# fi

if [ $FAKE -eq 0 ]
then
	#echo $cmd
	eval $cmd
else
	echo $cmd
fi
