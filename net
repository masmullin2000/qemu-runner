#!/bin/bash

LINK="en"
NETWORK="192.168."
BR="0.3"
GW="1.1"
CIDR="16"

DIR="$1"
shift

while [[ ! -z "$2" ]]; do
    case "$2" in
        -l|--link)
            LINK="$3"
            shift
            ;;
        -n|--network)
            NETWORK="$3"
            shift
            ;;
        -br|--bridge_ip)
            BR="$3"
            shift
            ;;
        -gw|--gateway_ip)
            GW="$3"
            shift
            ;;
    esac
    shift
done

HOST_NET=$(ip link | awk '{ print $2; }' | grep en | sed 's/://g')
BR_IP="$NETWORK"+"$BR"
GW_IP="$NETWORK"+"$GW"

clean_tap() {
	TAPS=$(ip a | grep tap | awk '{ print $2; }' | sed 's/://g')
	for t in $TAPS; do
		sudo ip link set $t nomaster
		sudo ip link del $t
	done
}


if [[ "$DIR" == "up" ]]; then
	shift
	sudo ip link add name br0 type bridge
	sudo ip link set dev br0 up
	sudo ip link set dev $HOST_NET up
	sudo ip addr flush dev $HOST_NET
	sudo ip link set dev $HOST_NET master br0
	sudo ip addr add $BR_IP/$CIDR dev br0
	sudo ip route add default via $GW_IP dev br0

	sudo iptables -A FORWARD -p all -i br0 -j ACCEPT

elif [[ "$DIR" == "down" ]]; then
	shift
    clean_tap
	sudo ip link set dev $HOST_NET nomaster
	sudo ip link del dev br0
	sudo ip link set dev $HOST_NET down
	sudo ip link set dev $HOST_NET up
elif [[ "$DIR" == "ct" ]]; then
	clean_tap
else
    echo "Usage: net <up|down> <options>"
    echo "  options:"
    echo "    -l|--link: Link to set the bridge on (eg eth0)"
    echo "    -n|--network: First 3 octets of IP address of br0 (eg 192.168.0.)"
    echo "                  note the final dot"
    echo "    -br|--bridge_ip: final octet of br0 (eg 26)"
    echo "    -gw|--gateway_ip: final octet of the gateway (eg 1)"
    echo ""
    echo "example: net up -l enp -n 192.168.0. -br 26 -gw 1"
fi
