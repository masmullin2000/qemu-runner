#!/bin/bash

#IFACE=$(ip link | awk '{ print $2; }' | grep br0 | sed 's/://g')
IDX=$(ip link | awk '{ print $2; }' | grep veth | sed 's/://g' | sed 's/@.*//g' | wc | awk '{ print $1; }')
UNAME=""
CMD=""
POST=""
BR=0
IFACE=""
EXIT=0

NS_PREF=vnet-ns
VETH_HOST_PREF=veth-host
VETH_NS_PREF=veth-ns

usage() {
	echo -e "ns [options]:"
	echo -e "\t-n|--name: name given to namespace and veth pair"
	echo -e "\t-e|--enter: enter into the namespace with supplied username"
	echo -e "\t-d|--down: tear down the namespace"
	echo -e "\t-u|--up: setup the namespace"
	echo -e "\t-i|--interface: external interface"
	echo -e "\t-br|--bridge: Inside the namespace, setup bridge networking (for vms)"
	echo -e "\t-h|--help: This message"
}

while [ ! -z "$1" ]
do
	case "$1" in
		-n|--name)
			POST=$2
			shift
			;;
		-e|--enter)
			if [[ -z $2 ]]; then
				echo "No user name given"
				exit 1
			fi

			UNAME=$2
			VALID=$(cat /etc/passwd | grep $UNAME | awk 'BEGIN { FS = ":" } ; {print $1}')
			if [[ $UNAME != $VALID ]]; then
				echo "Username invalid"
				exit 1
			fi

			shift
			;;
		-x|--exit)
			EXIT=1
			;;
		-d|--down)
			CMD="down"
			;;
		-u|--up)
			CMD="up"
			IDX=$(($IDX+1))
			;;
		-br|--bridge)
			BR=1
			;;
		-h|--help)
			usage
			exit 1
			;;
		-i|--interface)
			IFACE=$2
			shift
			;;
		*)
			echo "Unknown Command"
			exit
			;;
	esac
	shift
done

ID=$(id | awk '{ print $1; }' | cut -b 5-8 | sed 's/[^0-9]*//g')
if [[ $ID != "0" ]]; then
	echo -e "Error: Must be root"
	exit 1
fi

if [[ $IFACE == "" && $CMD == "up" ]]; then
	echo -e "Error: External Interface Must be Set"
	exit 1
fi

if [[ $POST == "" ]]; then
	POST=$IDX
fi

if [[ $CMD == "up" ]]; then
	shift
	NS=$NS_PREF-$POST
	VETH_HOST=$VETH_HOST_PREF-$POST
	VETH_NS=$VETH_NS_PREF-$POST

	echo -e "Namespace $NS connected via VETH PAIR $VETH_NS to $VETH_HOST"
	
	ip link add $VETH_NS type veth peer name $VETH_HOST
	
	ip a add 192.168.$IDX.1/24 dev $VETH_HOST
	ip link set $VETH_HOST up

	ip netns add $NS
	ip link set $VETH_NS netns $NS
	ip -n $NS link set $VETH_NS up
	ip -n $NS link set lo up
	
	if [[ $BR == 1 ]]; then
		ip -n $NS link add name br0 type bridge
		ip -n $NS link set dev br0 up
		ip -n $NS link set dev $VETH_NS master br0

		# not necessary
		ip -n $NS a add 192.168.$IDX.2/24 dev $VETH_NS

		ip -n $NS addr add 192.168.$IDX.3/24 dev br0
		ip -n $NS route add default via 192.168.$IDX.1 dev br0
		ip -n $NS route del 192.168.$IDX.0/24
	else
		ip -n $NS a add 192.168.$IDX.2/24 dev $VETH_NS
		ip -n $NS route add default via 192.168.$IDX.1 dev $VETH_NS
		ip -n $NS route del 192.168.$IDX.0/24
	fi

	echo 1 > /proc/sys/net/ipv4/ip_forward
	iptables -t nat -A PREROUTING -p tcp --dport 8080 -j DNAT --to-destination 192.168.$IDX.240:80
	iptables -t nat -A POSTROUTING -s 192.168.$IDX.0/255.255.255.0 -o $IFACE -j MASQUERADE
	iptables -A FORWARD -i $IFACE -o $VETH_HOST -j ACCEPT
	iptables -A FORWARD -o $IFACE -i $VETH_HOST -j ACCEPT

	if [[ $UNAME != "" ]]; then
		echo -e "\n--Entering namespace $NS with username $UNAME--\n"
		ip netns exec $NS su $UNAME
		echo -e "\n--Exited namespace $NS--\n"
	if [[ $EXIT == 1 ]]; then
		ns -d -n $POST
	fi
	fi

elif [[ $CMD == "down" ]]; then
	shift
	IDX=$(($IDX-1))

	NS=$NS_PREF-$POST
	VETH_HOST=$VETH_HOST_PREF-$POST
	VETH_NS=$VETH_NS_PREF-$POST
	ip -n $NS link del $VETH_NS
	ip netns del $NS
	iptables -t nat -F
	iptables -P FORWARD DROP
	iptables -F FORWARD
fi

